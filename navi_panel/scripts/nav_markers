#!/usr/bin/env python3

from interactive_markers.interactive_marker_server import *
from interactive_markers.menu_handler import *
from visualization_msgs.msg import *

import numpy as np
import rospy

from interactive_marker_utils import (
    create_waypoint_marker,
    SetLocalizationCallback,
    NavigateCallback,
    StateManager
)


def main():
    rospy.init_node("spot_graphnav_markers", anonymous=True)
    server = InteractiveMarkerServer("navigation_waypoints")
    manager = StateManager(server)

    ##############################
    # Dummy markers for testing
    marker1 = create_waypoint_marker("marker1", reference_frame="base_link", position=[1, 0, 0.3])
    marker2 = create_waypoint_marker("marker2", reference_frame="base_link", position=[-1, 0, 0.3])

    server.insert(marker2, lambda feedback: feedback)
    server.insert(marker1, lambda feedback: feedback)
    ##############################

    # TODO subscribe to marker pose update topic

    # Add menu to markers

    ##############################
    # Dummy markers
    mh = MenuHandler()
    mh.insert("Set localization", callback=SetLocalizationCallback(marker1, manager))
    mh.insert("Navigate to", callback=NavigateCallback(manager))
    mh.apply(server, marker1.name)

    mh = MenuHandler()
    mh.insert("Set localization", callback=SetLocalizationCallback(marker2, manager))
    mh.insert("Navigate to", callback=NavigateCallback(manager))
    mh.apply(server, marker2.name)
    ##############################

    server.applyChanges()
    rospy.spin()


if __name__ == "__main__":
    main()
